mumgp3<-mumgp2 %>% group_by(qid,subgenome) %>% summarize(length=sum(length)) %>%
spread(subgenome,length,fill=0) %>% mutate(supenum_percent=supernum/(supernum+core)) %>%
mutate(align=ifelse(supenum_percent >0.4,"supernum","core"))
culture2<-left_join(culture1,mumgp3,by=c("contig_id"="qid"))
culure_u_plot<-plot_ly(data=culture2,x=~nucl_freq.gc,y=~bimodality,color =~align,
#colors = palette,
marker=list(size=4)) %>%add_markers()%>%
layout( legend = list(font = list(size = 15),size=20),scene = list(xaxis = list(title = 'GC%'),
yaxis = list(title = 'Bimodality')
))
culure_u_plot
mumgp_mtg3<-mumgp_mtg2 %>% group_by(qid,subgenome) %>% summarize(length=sum(length)) %>%
spread(subgenome,length,fill=0) %>% mutate(supenum_percent=supernum/(supernum+core)) %>%
mutate(align=ifelse(supenum_percent >0.5,"supernum","core"))
mtg2<-left_join(mtg1,mumgp_mtg3,by=c("contig_id"="qid"))
mtg2<-mtg2 %>% filter(contig_id %in% bin1$contig_names)
mtg_u_plot<-plot_ly(data=mtg2,x=~nucl_freq.gc,y=~bimodality,color =~align,
colors = c("red","green"),
marker=list(size=4)) %>%add_markers()%>%
layout( legend = list(font = list(size = 15),size=20),scene = list(xaxis = list(title = 'GC%'),
yaxis = list(title = 'Bimodality')
))
mtg_u_plot
##platismatia plot
fasta_plagla<-readDNAStringSet('../bin.59.fasta')
##platismatia plot
fasta_plagla<-readDNAStringSet('../bin.59.fa')
##platismatia plot
fasta_plagla<-readDNAStringSet('../platismatia/bin.59.fa')
plagla_gc<-getGC(fasta_plagla)
plagla_bi<-sapply(fasta_plagla,BI_bc) %>% data.frame
colnames(plagla_bi)<-"bimodality"
plagla_bi$contig_id<-rownames(plagla_bi)
plagla<-left_join(plagla_gc,plagla_bi)
plagla_u_plot<-plot_ly(data=plagla,x=~nucl_freq.gc,y=~bimodality,
#colors = c("red","green"),
marker=list(size=4)) %>%add_markers()%>%
layout( legend = list(font = list(size = 15),size=20),scene = list(xaxis = list(title = 'GC%'),
yaxis = list(title = 'Bimodality')
))
plagla_u_plot
htmlwidgets::saveWidget(as.widget(plagla_u_plot), "../platismatia/plagla_u_plot.html", selfcontained = FALSE)
100/13
7.7*0.25
usr<-par("usr");
panel.bxp<-function(x,...)
{usr<-par("usr");
on.exit(par(usr))  par(usr=c(0,2,
usr[3:4]))  boxplot(x,add=T)
}
par(usr=c(0,2,
usr[3:4]))  boxplot(x,add=T)
panel.bxp<-function(x,...)
{usr<-par("usr");
on.exit(par(usr))
par(usr=c(0,2,
usr[3:4]))  boxplot(x,add=T)
}
panel.bxp<-function(x,...)
{usr<-par("usr");
on.exit(par(usr))
par(usr=c(0,2,
usr[3:4]))  boxplot(x,add=T)
}
boxplot(x,add=T)
panel.bxp<-function(x,...)
{usr<-par("usr");
on.exit(par(usr))
par(usr=c(0,2,usr[3:4]))
boxplot(x,add=T)
}
7*6+2
73-49
setwd("~/Documents/gulya/mito_mystery/metagenomics/TS1974")
depth1<-read.delim("concoct_depth.txt")
colnames(depth1)[2]<-"coverage"
depth1<-transform(depth1, contig_id = sub("(.*_cov_[0-9]+\\.[0-9]+).*", "\\1", contig))
depth2<-depth1 %>% group_by(contig_id) %>% summarize(mean_contig=mean(coverage))
#get binning
cluster<-read.csv("clustering_gt1000_merged.csv")
df<-left_join(depth2,cluster)
head(df)
read.delim("TS1974_graph.txt")
read.delim("TS1974_graph.txt",header=F) %>% filter(V3 %in% c(8,39,22)) %>%summarize(mean=mean(V2))
read.delim("../GTX0158/GTX0158_graph.txt",header=F) %>% filter(V3 %in% c(70)) %>%summarize(mean=mean(V2))
read.delim("../GTX0161/GTX0161_graph.txt",header=F) %>% filter(V3 %in% c(70)) %>%summarize(mean=mean(V2))
read.delim("../GTX0161/GTX0161_graph.txt",header=F) %>% filter(V3 %in% c(25,18,31)) %>%summarize(mean=mean(V2))
read.delim("../GTX0163/GTX0163_graph.txt",header=F) %>% filter(V3 %in% c(55,67,82,19)) %>%summarize(mean=mean(V2))
setwd("~/Documents/gulya/mito_mystery/metagenomics/GTX0158")
#get coverage
depth1<-read.delim("concoct_depth.txt")
colnames(depth1)[2]<-"coverage"
depth1<-transform(depth1, contig_id = sub("(.*_cov_[0-9]+\\.[0-9]+).*", "\\1", contig))
depth2<-depth1 %>% group_by(contig_id) %>% summarize(mean_contig=mean(coverage))
#get binning
cluster<-read.csv("clustering_gt1000_merged.csv")
df<-left_join(depth2,cluster)
head(df)
df %>% filter(cluster_id==70) %>% summarize(mean_contig=mean(mean_contig))
read.delim("../GTX0161/GTX0161_graph.txt",header=F) %>% filter(V3 %in% c(39)) %>%summarize(mean=mean(V2))
read.delim("../GTX0163/GTX0163_graph.txt",header=F) %>% filter(V3 %in% c(99)) %>%summarize(mean=mean(V2))
read.delim("TS1974_graph.txt",header=F) %>% filter(V3 %in% c(34)) %>%summarize(mean=mean(V2))
read.delim("../TS1974/TS1974_graph.txt",header=F) %>% filter(V3 %in% c(34)) %>%summarize(mean=mean(V2))
setwd("~/Documents/gulya/mito_mystery/metagenomics/TS1974")
library(tidyverse)
library(plotly)
library(RColorBrewer)
library(Biostrings)
df2<-read.delim("TS1974_graph.txt",header=F)
head(df2)
colnames(df2)<-c("contig_id","mean_contig","cluster_id","nucl_freq.gc","length")
#make a dummy variable for graph colors
df2$color<-'1other'
df2$color[df2$cluster_id %in% c(8,39,22)]<-"ascomycete"
df2$color[df2$contig_id=="NODE_1106_length_32113_cov_1337.483000"]<-"mitochondrion"
df2$color[df2$contig_id=="NODE_478_length_80156_cov_71.494426"]<-"atp9"
palette<-c('#b5b8b5','#ea9e0f','#7a03bd','#ee041b')
plot_ly(data=df2,x=~nucl_freq.gc,y=~mean_contig,color=~as.factor(color),
colors = palette,
marker=list(size=4)) %>%add_markers()%>%
layout( xaxis = list(title = 'GC%'),
yaxis = list(title = 'Coverage',type="log"))
write.table(df2,"TS1974_graph.txt",sep='\t',quote = F,row.names = F)
df2<-read.delim("GTX0161/GTX0161_graph.txt",header=F)
setwd("~/Documents/gulya/mito_mystery/metagenomics")
df2<-read.delim("GTX0161/GTX0161_graph.txt",header=F)
colnames(df2)<-c("contig_id","mean_contig","cluster_id","nucl_freq.gc","length")
#make a dummy variable for graph colors
df2$color<-'1other'
df2$color[df2$cluster_id %in% c(25,31,18)]<-"ascomycete"
df2$color[df2$contig_id=="NODE_511_length_77571_cov_7767.432259"]<-"mitochondrion"
df2$color[df2$contig_id=="NODE_2671_length_6298_cov_296.856319"]<-"atp9"
palette<-c('#b5b8b5','#ea9e0f','#7a03bd','#ee041b')
write.table(df2,"GTX0161_graph.txt",sep='\t',quote = F,row.names = F)
plot_ly(data=df2,x=~nucl_freq.gc,y=~mean_contig,color=~as.factor(color),
colors = palette,
marker=list(size=4)) %>%add_markers()%>%
layout( xaxis = list(title = 'GC%'),
yaxis = list(title = 'Coverage',type="log"))
setwd("~/Documents/gulya/mito_mystery/git_version/gc_cov_plots")
library(tidyverse)
library(plotly)
library(RColorBrewer)
library(Biostrings)
###TS1974
#get coverage
depth1<-read.delim("data/TS1974/concoct_depth.txt")
colnames(depth1)[2]<-"coverage"
depth1<-transform(depth1, contig_id = sub("(.*_cov_[0-9]+\\.[0-9]+).*", "\\1", contig))
depth2<-depth1 %>% group_by(contig_id) %>% summarize(mean_contig=mean(coverage))
#get binning
cluster<-read.csv("data/TS1974/clustering_gt1000_merged.csv")
df<-left_join(depth2,cluster)
#get GC%
getGC<-function(fasta){
#process fasta
contig_id<-names(fasta) #get contig names
nucl_freq<-alphabetFrequency(fasta)
nucl_freq<-as.data.frame(nucl_freq) %>% mutate(gc=100*(G+C+S)/(A+T+W+G+C+S)) #get gc content
dataset1<-data.frame(contig_id,nucl_freq$gc)
return(dataset1)
}
#get GC%
fasta<-readDNAStringSet('TS1974/scaffolds.fasta')
#get GC%
fasta<-readDNAStringSet('data/TS1974/scaffolds.fasta')
gc<-getGC(fasta)
#filter out short contigs <=1000
df2<-transform(df2, length=sub(".*_length_([0-9]+).*", "\\1", contig_id))
df2$length<-as.numeric(as.character(df2$length))
df2 <- df2 %>% filter(length>999)
colnames(df2)<-c("contig_id","mean_contig","cluster_id","nucl_freq.gc","length")
#make a dummy variable for graph colors
df2$color<-'1other'
df2$color[df2$cluster_id %in% c(8,39,22)]<-"ascomycete"
df2$color[df2$contig_id=="NODE_1106_length_32113_cov_1337.483000"]<-"mitochondrion"
df2$color[df2$contig_id=="NODE_478_length_80156_cov_71.494426"]<-"atp9"
palette<-c('#b5b8b5','#ea9e0f','#7a03bd','#ee041b')
write.table(df2,"prelim_plots/TS1974_graph.txt",sep='\t',quote = F,row.names = F)
##GTX0161
#get coverage
depth1<-read.delim("data/GTX0161/concoct_depth.txt")
colnames(depth1)[2]<-"coverage"
depth1<-transform(depth1, contig_id = sub("(.*_cov_[0-9]+\\.[0-9]+).*", "\\1", contig))
depth2<-depth1 %>% group_by(contig_id) %>% summarize(mean_contig=mean(coverage))
#get binning
cluster<-read.csv("data/GTX0161/clustering_gt1000_merged.csv")
df<-left_join(depth2,cluster)
#get GC%
fasta<-readDNAStringSet('data/GTX0161/scaffolds.fasta')
gc<-getGC(fasta)
df2<-left_join(df,gc)
#filter out short contigs <=1000
df2<-transform(df2, length=sub(".*_length_([0-9]+).*", "\\1", contig_id))
df2$length<-as.numeric(as.character(df2$length))
df2 <- df2 %>% filter(length>999)
colnames(df2)<-c("contig_id","mean_contig","cluster_id","nucl_freq.gc","length")
#make a dummy variable for graph colors
df2$color<-'1other'
df2$color[df2$cluster_id %in% c(25,31,18)]<-"ascomycete"
df2$color[df2$contig_id=="NODE_511_length_77571_cov_7767.432259"]<-"mitochondrion"
df2$color[df2$contig_id=="NODE_2671_length_6298_cov_296.856319"]<-"atp9"
palette<-c('#b5b8b5','#ea9e0f','#7a03bd','#ee041b')
write.table(df2,"prelim_plots/GTX0161_graph.txt",sep='\t',quote = F,row.names = F)
##GT0163
#get coverage
depth1<-read.delim("data/GTX0163/concoct_depth.txt")
colnames(depth1)[2]<-"coverage"
depth1<-transform(depth1, contig_id = sub("(.*_cov_[0-9]+\\.[0-9]+).*", "\\1", contig))
depth2<-depth1 %>% group_by(contig_id) %>% summarize(mean_contig=mean(coverage))
#get binning
cluster<-read.csv("data/GTX0163/clustering_gt1000_merged.csv")
df<-left_join(depth2,cluster)
#get GC%
fasta<-readDNAStringSet('data/GTX0163/scaffolds.fasta')
gc<-getGC(fasta)
df2<-left_join(df,gc)
#filter out short contigs <=1000
df2<-transform(df2, length=sub(".*_length_([0-9]+).*", "\\1", contig_id))
df2$length<-as.numeric(as.character(df2$length))
df2 <- df2 %>% filter(length>999)
colnames(df2)<-c("contig_id","mean_contig","cluster_id","nucl_freq.gc","length")
#make a dummy variable for graph colors
df2$color<-'1other'
df2$color[df2$cluster_id %in% c(55,67,19,82)]<-"ascomycete"
df2$color[df2$contig_id=="NODE_339_length_76204_cov_3544.912553"]<-"mitochondrion"
df2$color[df2$contig_id=="NODE_161_length_119058_cov_145.352495"]<-"atp9"
write.table(df2,"prelim_plots/GTX0163_graph.txt",sep='\t',quote = F,row.names = F)
plot_ly(data=df2,x=~nucl_freq.gc,y=~mean_contig,color=~as.factor(color),
colors = palette,
marker=list(size=4)) %>%add_markers()%>%
layout( xaxis = list(title = 'GC%'),
yaxis = list(title = 'Coverage',type="log"))
##GTX0158
#get coverage
depth1<-read.delim("data/GTX0158/concoct_depth.txt")
colnames(depth1)[2]<-"coverage"
depth1<-transform(depth1, contig_id = sub("(.*_cov_[0-9]+\\.[0-9]+).*", "\\1", contig))
depth2<-depth1 %>% group_by(contig_id) %>% summarize(mean_contig=mean(coverage))
#get binning
cluster<-read.csv("data/GTX0158/clustering_gt1000_merged.csv")
df<-left_join(depth2,cluster)
#get GC%
fasta<-readDNAStringSet('data/GTX0158/scaffolds.fasta')
gc<-getGC(fasta)
df2<-left_join(df,gc)
#filter out short contigs <=1000
df2<-transform(df2, length=sub(".*_length_([0-9]+).*", "\\1", contig_id))
df2$length<-as.numeric(as.character(df2$length))
df2 <- df2 %>% filter(length>999)
colnames(df2)<-c("contig_id","mean_contig","cluster_id","nucl_freq.gc","length")
#make a dummy variable for graph colors
df2$color<-'1other'
df2$color[df2$cluster_id %in% c(25,31,18)]<-"ascomycete"
df2$color[df2$contig_id=="NODE_254_length_28338_cov_10948.085139"]<-"mitochondrion"
df2$color[df2$contig_id=="NODE_4_length_1304943_cov_350.589746"]<-"atp9"
write.table(df2,"prelim_plots/GTX0158_graph.txt",sep='\t',quote = F,row.names = F)
plot_ly(data=df2,x=~nucl_freq.gc,y=~mean_contig,color=~as.factor(color),
colors = palette,
marker=list(size=4)) %>%add_markers()%>%
layout( xaxis = list(title = 'GC%'),
yaxis = list(title = 'Coverage',type="log"))
#make a dummy variable for graph colors
df2$color<-'1other'
df2$color[df2$cluster_id ==70]<-"ascomycete"
df2$color[df2$contig_id=="NODE_254_length_28338_cov_10948.085139"]<-"mitochondrion"
df2$color[df2$contig_id=="NODE_4_length_1304943_cov_350.589746"]<-"atp9"
write.table(df2,"prelim_plots/GTX0163_graph.txt",sep='\t',quote = F,row.names = F)
plot_ly(data=df2,x=~nucl_freq.gc,y=~mean_contig,color=~as.factor(color),
colors = palette,
marker=list(size=4)) %>%add_markers()%>%
layout( xaxis = list(title = 'GC%'),
yaxis = list(title = 'Coverage',type="log"))
###Make the plot
TS1974<-read.delim("prelim_plots/TS1974_graph.txt")
GTX0158<-read.delim("prelim_plots/GTX0158_graph.txt")
GTX0161<-read.delim("prelim_plots/GTX0161_graph.txt")
GTX0163<-read.delim("prelim_plots/GTX0163_graph.txt")
TS1974$metagenome<-"TS1974"
GTX0158$metagenome<-"GTX0158"
GTX0161$metagenome<-"GTX0161"
GTX0163$metagenome<-"GTX0163"
plot_data<-rbind(TS1974,GTX0158,GTX0161,GTX0163)
head(GTX0163)
head(GTX0161)
head(GTX0158)
head(TS1974)
###Make the plot
TS1974<-read.delim("prelim_plots/TS1974_graph.txt")
head(TS1974)
depth1<-read.delim("data/TS1974/concoct_depth.txt")
colnames(depth1)[2]<-"coverage"
depth1<-transform(depth1, contig_id = sub("(.*_cov_[0-9]+\\.[0-9]+).*", "\\1", contig))
depth2<-depth1 %>% group_by(contig_id) %>% summarize(mean_contig=mean(coverage))
#get binning
cluster<-read.csv("data/TS1974/clustering_gt1000_merged.csv")
df<-left_join(depth2,cluster)
#get GC%
fasta<-readDNAStringSet('data/TS1974/scaffolds.fasta')
gc<-getGC(fasta)
df2<-left_join(df,gc)
#filter out short contigs <=1000
df2<-transform(df2, length=sub(".*_length_([0-9]+).*", "\\1", contig_id))
df2$length<-as.numeric(as.character(df2$length))
df2 <- df2 %>% filter(length>999)
colnames(df2)<-c("contig_id","mean_contig","cluster_id","nucl_freq.gc","length")
#make a dummy variable for graph colors (see methods on how we identified bins constituiting the ascomycete MAG, and located the mitochondrion and ATP9 contigs)
df2$color<-'1other'
df2$color[df2$cluster_id %in% c(8,39,22)]<-"ascomycete"
df2$color[df2$contig_id=="NODE_1106_length_32113_cov_1337.483000"]<-"mitochondrion"
df2$color[df2$contig_id=="NODE_478_length_80156_cov_71.494426"]<-"atp9"
write.table(df2,"prelim_plots/TS1974_graph.txt",sep='\t',quote = F,row.names = F)
###Make the plot
TS1974<-read.delim("prelim_plots/TS1974_graph.txt")
head(TS1974)
TS1974$metagenome<-"TS1974"
plot_data<-rbind(TS1974,GTX0158,GTX0161,GTX0163)
#make faceted plot for GTX0161 and GTX0158
plot_data%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color), type = "scatter")) %>%
subplot(nrows = 2, shareX = TRUE, shareY = TRUE)
#make faceted plot for GTX0161 and GTX0158
palette<-c('#b5b8b5','#ea9e0f','#7a03bd','#ee041b')
plot_data%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color), type = "scatter",colors = palette)) %>%
add_markers()%>%   layout( xaxis = list(title = 'GC%'),
yaxis = list(title = 'Coverage',type="log"))%>%
subplot(nrows = 2, shareX = TRUE, shareY = TRUE)
plot_data%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color), type = "scatter",colors = palette)) %>%
layout( xaxis = list(title = 'GC%'),
yaxis = list(title = 'Coverage',type="log"))%>%
subplot(nrows = 2, shareX = TRUE, shareY = TRUE)
plot_data%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette)) %>%
layout( xaxis = list(title = 'GC%'),
yaxis = list(title = 'Coverage',type="log"))%>%
subplot(nrows = 2, shareX = TRUE, shareY = TRUE)
plot_data%>%
group_by(metagenome) %>%
do(p=plot_ly(data=df2,x=~nucl_freq.gc,y=~mean_contig,color=~as.factor(color),
colors = palette,
marker=list(size=4))) %>%add_markers()%>%
layout( xaxis = list(title = 'GC%'),
yaxis = list(title = 'Coverage',type="log"))
plot_data%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette)) %>%
subplot(nrows = 2, shareX = TRUE, shareY = TRUE)
plot_data%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette)) %>%
subplot(nrows = 2, shareX = TRUE, shareY = TRUE)%>%
layout( xaxis = list(title = 'GC%'),
yaxis = list(title = 'Coverage',type="log"))
plot_data1<-rbind(GTX0158,GTX0161) #I did them in two batches to fight off a plotly bug
plot_data2<-rbind(TS1974,GTX0163)
plot_data1%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette)) %>%
subplot(nrows = 2, shareX = TRUE, shareY = TRUE)%>%
layout( xaxis = list(title = 'GC%'),
yaxis = list(title = 'Coverage',type="log"))
plot_data1%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette)) %>%
subplot(nrows = 1, shareX = TRUE, shareY = TRUE)%>%
layout( xaxis = list(title = 'GC%'),
yaxis = list(title = 'Coverage',type="log"))
depth1<-read.delim("data/GTX0158/concoct_depth.txt")
colnames(depth1)[2]<-"coverage"
depth1<-transform(depth1, contig_id = sub("(.*_cov_[0-9]+\\.[0-9]+).*", "\\1", contig))
depth2<-depth1 %>% group_by(contig_id) %>% summarize(mean_contig=mean(coverage))
#get binning
cluster<-read.csv("data/GTX0158/clustering_gt1000_merged.csv")
df<-left_join(depth2,cluster)
#get GC%
fasta<-readDNAStringSet('data/GTX0158/scaffolds.fasta')
gc<-getGC(fasta)
df2<-left_join(df,gc)
#filter out short contigs <=1000
df2<-transform(df2, length=sub(".*_length_([0-9]+).*", "\\1", contig_id))
df2$length<-as.numeric(as.character(df2$length))
df2 <- df2 %>% filter(length>999)
colnames(df2)<-c("contig_id","mean_contig","cluster_id","nucl_freq.gc","length")
#make a dummy variable for graph colors
df2$color<-'1other'
df2$color[df2$cluster_id ==70]<-"ascomycete"
df2$color[df2$contig_id=="NODE_254_length_28338_cov_10948.085139"]<-"mitochondrion"
df2$color[df2$contig_id=="NODE_4_length_1304943_cov_350.589746"]<-"atp9"
write.table(df2,"prelim_plots/GTX0163_graph.txt",sep='\t',quote = F,row.names = F)
GTX0158<-read.delim("prelim_plots/GTX0158_graph.txt")
GTX0158$metagenome<-"GTX0158"
plot_data1<-rbind(GTX0158,GTX0161) #I did them in two batches to fight off a plotly bug
plot_data1%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette)) %>%
subplot(nrows = 1, shareX = TRUE, shareY = TRUE)%>%
layout( xaxis = list(title = 'GC%',range = c(0,100)),
yaxis = list(title = 'Coverage',type="log"))
write.table(df2,"prelim_plots/GTX0158_graph.txt",sep='\t',quote = F,row.names = F)
GTX0158<-read.delim("prelim_plots/GTX0158_graph.txt")
GTX0158<-read.delim("prelim_plots/GTX0158_graph.txt")
GTX0158$metagenome<-"GTX0158"
plot_data1<-rbind(GTX0158,GTX0161) #I did them in two batches to fight off a plotly bug
plot_data1%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette, type = "scatter")) %>%
subplot(nrows = 1, shareX = TRUE, shareY = TRUE)%>%
layout( xaxis = list(title = 'GC%',range = c(0,100)),
yaxis = list(title = 'Coverage',type="log"))
plot_data1%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette, type = "scatter")) %>%
layout( xaxis = list(title = 'GC%',range = c(0,100)),
yaxis = list(title = 'Coverage',type="log")) %>% subplot(nrows = 1, shareX = TRUE, shareY = TRUE)%>%
!!
)
plot_data1%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette, type = "scatter")) %>%
layout( xaxis = list(title = 'GC%',range = c(0,100)),
yaxis = list(title = 'Coverage',type="log")) %>% subplot(nrows = 1, shareX = TRUE, shareY = TRUE)
plot_data1%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette, type = "scatter") %>%
layout( xaxis = list(title = 'GC%',range = c(0,100)),
yaxis = list(title = 'Coverage',type="log"))) %>% subplot(nrows = 1, shareX = TRUE, shareY = TRUE)
depth1<-read.delim("data/GTX0163/concoct_depth.txt")
colnames(depth1)[2]<-"coverage"
depth1<-transform(depth1, contig_id = sub("(.*_cov_[0-9]+\\.[0-9]+).*", "\\1", contig))
depth2<-depth1 %>% group_by(contig_id) %>% summarize(mean_contig=mean(coverage))
#get binning
cluster<-read.csv("data/GTX0163/clustering_gt1000_merged.csv")
df<-left_join(depth2,cluster)
#get GC%
fasta<-readDNAStringSet('data/GTX0163/scaffolds.fasta')
gc<-getGC(fasta)
df2<-left_join(df,gc)
#filter out short contigs <=1000
df2<-transform(df2, length=sub(".*_length_([0-9]+).*", "\\1", contig_id))
df2$length<-as.numeric(as.character(df2$length))
df2 <- df2 %>% filter(length>999)
colnames(df2)<-c("contig_id","mean_contig","cluster_id","nucl_freq.gc","length")
#make a dummy variable for graph colors
df2$color<-'1other'
df2$color[df2$cluster_id %in% c(55,67,19,82)]<-"ascomycete"
df2$color[df2$contig_id=="NODE_339_length_76204_cov_3544.912553"]<-"mitochondrion"
df2$color[df2$contig_id=="NODE_161_length_119058_cov_145.352495"]<-"atp9"
write.table(df2,"prelim_plots/GTX0163_graph.txt",sep='\t',quote = F,row.names = F)
TS1974<-read.delim("prelim_plots/TS1974_graph.txt")
GTX0158<-read.delim("prelim_plots/GTX0158_graph.txt")
GTX0161<-read.delim("prelim_plots/GTX0161_graph.txt")
GTX0163<-read.delim("prelim_plots/GTX0163_graph.txt")
TS1974$metagenome<-"TS1974"
GTX0158$metagenome<-"GTX0158"
GTX0161$metagenome<-"GTX0161"
GTX0163$metagenome<-"GTX0163"
plot_data<-rbind(GTX0158,GTX0161,TS1974,GTX0163)
plot_data$metagenome<-factor(plot_data$metagenome,levels("TS1974","GTX0163","GTX0158","GTX0161"))
plot_data$metagenome<-factor(plot_data$metagenome,levels=c("TS1974","GTX0163","GTX0158","GTX0161"))
str(plot_data)
plot_data%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette, type = "scatter") %>%
layout( xaxis = list(title = 'GC%',range = c(0,100)),
yaxis = list(title = 'Coverage',type="log"))) %>%
subplot(nrows = 2, shareX = TRUE, shareY = TRUE)
gc_plot<-plot_data%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette, type = "scatter") %>%
layout( xaxis = list(title = 'GC%',range = c(0,100)),
yaxis = list(title = 'Coverage',type="log"))) %>%
subplot(nrows = 2, shareX = TRUE, shareY = TRUE)
htmlwidgets::saveWidget(as.widget(gc_plot), "final_plot/gc_plot.html", selfcontained = FALSE)
htmlwidgets::saveWidget(as.widget(gc_plot), "gc_plot.html", selfcontained = FALSE)
Sys.setenv("PATH" = paste(Sys.getenv("PATH"), "/opt/anaconda2/bin/", sep = .Platform$path.sep))
orca(gc_plot,"final_plot/gc_plot.svg")
plot_data%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette, type = "scatter",marker=list(size=3)) %>%
layout( xaxis = list(title = 'GC%',range = c(0,100)),
yaxis = list(title = 'Coverage',type="log"))) %>%
subplot(nrows = 2, shareX = TRUE, shareY = TRUE)
plot_data%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette, type = "scatter",marker=list(size=3)) %>%
layout( xaxis = list(title = 'GC%',range = c(0,100),tickvals = list(0, 25, 50,75,100)),
yaxis = list(title = 'Coverage',type="log"))) %>%
subplot(nrows = 2, shareX = TRUE, shareY = TRUE)
Sys.setenv("PATH" = paste(Sys.getenv("PATH"), "/opt/anaconda2/bin/", sep = .Platform$path.sep))
orca(gc_plot,"final_plot/gc_plot.svg")
gc_plot<-plot_data%>%
group_by(metagenome) %>%
do(p=plot_ly(., x = ~nucl_freq.gc, y = ~mean_contig, color = ~as.factor(color),colors = palette, type = "scatter",marker=list(size=3)) %>%
layout( xaxis = list(title = 'GC%',range = c(0,100),tickvals = list(0, 25, 50,75,100)),
yaxis = list(title = 'Coverage',type="log"))) %>%
subplot(nrows = 2, shareX = TRUE, shareY = TRUE)
htmlwidgets::saveWidget(as.widget(gc_plot), "final_plot/gc_plot.html", selfcontained = FALSE)
Sys.setenv("PATH" = paste(Sys.getenv("PATH"), "/opt/anaconda2/bin/", sep = .Platform$path.sep))
orca(gc_plot,"final_plot/gc_plot.svg")
gc_plot_TS1984<-plot_ly(data=df2,x=~nucl_freq.gc,y=~mean_contig,color=~as.factor(cluster_id),
colors = palette,
marker=list(size=4)) %>%add_markers()%>%
layout( xaxis = list(title = 'GC%'),
yaxis = list(title = 'Coverage',type="log"))
htmlwidgets::saveWidget(as.widget(gc_plot_TS1984), "prelim_plots/TS1974_gc_plot.html", selfcontained = FALSE)
htmlwidgets::saveWidget(as.widget(gc_plot_TS1984), "~/Documents/gulya/mito_mystery/git_version/gc_cov_plots/prelim_plots/TS1974_gc_plot.html", selfcontained = FALSE)
